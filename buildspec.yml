version: 0.2
phases:
  install:
    runtime-versions:
      golang: 1.12
    commands:
      - go get golang.org/x/lint/golint
      - go get -u github.com/stretchr/testify
  pre_build:
    commands:
      - cd "${CODEBUILD_SRC_DIR}"
      - go get ./...
      - golint -set_exit_status
      - go vet ./...
      - go test ./...
  build:
    commands:
      - STAGING_DIR="$(mktemp -d)"
      - |
        set -e
        for SVC in $(find ./svc -type d -mindepth 1 -maxdepth 1); do
          for LAMBDA in $(find "${SVC}/bin" -type d -mindepth 1 -maxdepth 1); do
            go build -o "./bin/$(basename "${LAMBDA}")" "${LAMBDA}"
          done
          zip -rqDm "${SVC}/lambdas.zip" ./bin/
          mkdir -p "${STAGING_DIR}/svc/$(basename "${SVC}")/"
          cp -r "${SVC}/scripts/" "${STAGING_DIR}/svc/$(basename "${SVC}")/"
        done
      - cp -r scripts/ "${STAGING_DIR}/"
      - aws s3 sync "${STAGING_DIR}/" "s3://${BUCKET}/"
      - aws cloudformation package --template app.yaml --s3-bucket "${BUCKET}" --output-template template.yaml
  post_build:
    commands:
      - if [ ! -f "./config/${BRANCH}.json" ]; then exit "No config file found"; fi
      - |
        cat ./config/${BRANCH}.json \
        | jq -f config.jq \
        | envsubst \
        > template-config.json
artifacts:
  type: zip
  files:
    - template.yaml
    - template-config.json
