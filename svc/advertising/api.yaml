openapi: 3.0.0
info:
  version: 0.1.0
  title: !Ref APIName
paths:
  /impressions:
    post:
      summary: Record a batch of impressions
      operationId: capture-impressions
      requestBody:
        description: A batch of impressions
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Impressions"
      x-amazon-apigateway-integration:
        type: AWS_PROXY
        httpMethod: POST
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CaptureImpressionsLambda.Arn}/invocations"
        credentials:
          Fn::GetAtt:
            - APIRole
            - Arn
        passthroughBehavior: when_no_match
      responses:
        '200':
          description: |
            The batch was processed.  Some events may not have been
            processed.  The response contains a list of events in the
            same order submitted, indicating which succeeded and which
            failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaptureResponse"
  /clicks:
    post:
      summary: Record a batch of clicks
      operationId: capture-clicks
      requestBody:
        description: A batch of clicks
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Clicks"
      x-amazon-apigateway-integration:
        type: AWS_PROXY
        httpMethod: POST
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CaptureClicksLambda.Arn}/invocations"
        credentials:
          Fn::GetAtt:
            - APIRole
            - Arn
        passthroughBehavior: when_no_match
      responses:
        '200':
          description: |
            The batch was processed.  Some events may not have been
            processed.  The response contains a list of events in the
            same order submitted, indicating which succeeded and which
            failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaptureResponse"
  /traffic/{ad-id}:
    get:
      summary: Get traffic for an ad
      operationId: ad-traffic
      parameters:
        - name: ad-id
          in: path
          description: ID of the ad
          required: true
          schema:
            type: string
            format: uuid
        - name: start
          in: querystring
          description: The start day
          required: false
          schema:
            $ref: "#/components/schemas/Date"
        - name: end
          in: querystring
          description: The end day
          required: false
          schema:
            $ref: "#/components/schemas/Date"
        - name: page
          in: querystring
          required: false
          description: The page of results to fetch
          schema:
            $ref: "#/components/schemas/Base64"
        - name: limit
          in: querystring
          required: false
          description: The number of results to fetch
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
      x-amazon-apigateway-integration:
        type: AWS_PROXY
        httpMethod: POST
        uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${QueryAdTrafficTableLambda.Arn}/invocations"
        credentials: !GetAtt APIRole.Arn
        passthroughBehavior: when_no_match
      responses:
        '200':
          description: |
            The query was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdTraffic"
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
x-amazon-apigateway-request-validator: all
components:
  schemas:
    Impressions:
      type: object
      properties:
        impressions:
          type: array
          items:
            $ref: "#/components/schemas/Impression"
          minItems: 1
          maxItems: 500
      required:
        - impressions
      additionalProperties: false
    Impression:
      type: object
      properties:
        impression_id:
          type: string
          format: uuid
        ad_id:
          type: string
          format: uuid
        occurred_at:
          type:
            $ref: "#/components/schemas/Timestamp"
      required:
        - ad_id
        - occurred_at
      additionalProperties: false
    Clicks:
      type: object
      properties:
        clicks:
          type: array
          items:
            $ref: "#/components/schemas/Click"
          minItems: 1
          maxItems: 500
      required:
        - clicks
      additionalProperties: false
    Click:
      type: object
      properties:
        impression_id:
          type: string
          format: uuid
        click_id:
          type: string
          format: uuid
        ad_id:
          type: string
          format: uuid
        occurred_at:
          type:
            $ref: "#/components/schemas/Timestamp"
      required:
        - impression_id
        - ad_id
        - occurred_at
      additionalProperties: false
    CaptureResponse:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/CaptureRecord"
          minItems: 1
          maxItems: 500
      required:
        - records
      additionalProperties: false
    CaptureRecord:
      type: object
      properties:
        failed:
          type: boolean
        error_code:
          type: string
        error_message:
          type: string
      required:
        - failed
      additionalProperties: false
    AdTraffic:
      type: object
      properties:
        next:
          type:
            $ref: "#/components/schemas/Base64"
        count:
          type: integer
          minimum: 0
        days:
          type: array
          items:
            $ref: "#/components/schemas/AdDay"
      required:
        - count
        - days
      additionalProperties: false
    AdDay:
      type: object
      properties:
        day:
          $ref: "#/components/schemas/Date"
        impressions:
          type: integer
          minimum: 0
        clicks:
          type: integer
          minimum: 0
        clickthrough_rate:
          type: number
          minimum: 0.0
          maximum: 1.0
      required:
        - day
        - impressions
        - clicks
        - clickthrough_rate
      additionalProperties: false
    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error
      additionalProperties: false
    Type:
      type: string
      format: "^[a-z]+[-a-z0-9]*$"
    Date:
      type: string
      format: "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
    Timestamp:
      type: string
      format: "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]{3})?$"
    Base64:
      type: string
      format: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
