{
  "start": "-PT1H",
  "periodOverride": "inherit",
  "widgets": [
    {
      "type": "text",
      "width": 24,
      "height": 1,
      "properties": { "markdown": "# Beacon Endpoints" }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/ApiGateway", "Count", "ApiName", "${APIName}", "Resource", "/data/events", "Method", "POST", "Stage", "${Stage}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Request Rate"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/ApiGateway", "Latency", "ApiName", "${APIName}", "Resource", "/data/events", "Method", "POST", "Stage", "${Stage}"]
        ],
        "period": 60,
        "stat": "p95",
        "region": "${AWS::Region}",
        "title": "Latency"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/ApiGateway", "IntegrationLatency", "ApiName", "${APIName}", "Resource", "/data/events", "Method", "POST", "Stage", "${Stage}"]
        ],
        "period": 60,
        "stat": "p95",
        "region": "${AWS::Region}",
        "title": "Integration Latency"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/ApiGateway", "4XXError", "ApiName", "${APIName}", "Resource", "/data/events", "Method", "POST", "Stage", "${Stage}"],
          [".",              "5XXError", ".",       "${APIName}", ".",        "/data/events", ".",      "POST", ".",     "${Stage}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Errors"
      }
    },
    {
      "type": "text",
      "width": 24,
      "height": 1,
      "properties": { "markdown": "# Firehoses" }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/Firehose", "IncomingRecords", "DeliveryStreamName", "${EventsDeliveryStream}"]
        ],
        "region": "${AWS::Region}",
        "title": "Incoming Records"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/Firehose", "IncomingBytes", "DeliveryStreamName", "${EventsDeliveryStream}"]
        ],
        "region": "${AWS::Region}",
        "title": "Incoming Bytes"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/Firehose", "DeliveryToS3.Success", "DeliveryStreamName", "${EventsDeliveryStream}"]
        ],
        "region": "${AWS::Region}",
        "title": "Successful Delivery To S3"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/Firehose", "DeliveryToS3.Records", "DeliveryStreamName", "${EventsDeliveryStream}"]
        ],
        "region": "${AWS::Region}",
        "title": "Records Delivered To S3"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/Firehose", "DeliveryToS3.Bytes", "DeliveryStreamName", "${EventsDeliveryStream}"]
        ],
        "region": "${AWS::Region}",
        "title": "Bytes Delivered To S3"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/Firehose", "DeliveryToS3.DataFreshness", "DeliveryStreamName", "${EventsDeliveryStream}"]
        ],
        "region": "${AWS::Region}",
        "title": "Delivery To S3 Data Freshness"
      }
    },
    {
      "type": "text",
      "width": 24,
      "height": 1,
      "properties": { "markdown": "# Real-Time App" }
    },
    {
      "type": "metric",
      "width": 24,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "Success", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "region": "${AWS::Region}",
        "title": "Success"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "KPUs", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Average",
        "region": "${AWS::Region}",
        "title": "KPUs"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "MillisBehindLatest", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Maximum",
        "region": "${AWS::Region}",
        "title": "Lag (ms)"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "Records", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Records Processed"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "Bytes", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Bytes Processed"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "InputProcessing.Success", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Input Processing Success"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "InputProcessing.OkBytes", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Input Processing Bytes"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "InputProcessing.Duration", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Average",
        "region": "${AWS::Region}",
        "title": "Input Processing Duration"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "InputProcessing.OkRecords", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Input Processing Successful Records"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "InputProcessing.DroppedRecords", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Input Processing Dropped Records"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "InputProcessing.ProcessingFailedRecords", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Input Processing Failed Records"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "LambdaDelivery.OkRecords", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Lambda Delivery Success"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "LambdaDelivery.DeliveryFailedRecords", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Lambda Delivery Failures"
      }
    },
    {
      "type": "metric",
      "width": 8,
      "height": 6,
      "properties": {
        "metrics": [
          ["AWS/KinesisAnalytics", "LambdaDelivery.Duration", "Application", "${RealTimeEventsApplication}"]
        ],
        "period": 60,
        "stat": "Average",
        "region": "${AWS::Region}",
        "title": "Lambda Delivery Duration"
      }
    },
    {
      "type": "text",
      "width": 24,
      "height": 1,
      "properties": { "markdown": "# Lambas" }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/Lambda", "Invocations", "FunctionName", "${RealTimeEventsLambda}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Invocations"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/Lambda", "Duration", "FunctionName", "${RealTimeEventsLambda}"]
        ],
        "period": 60,
        "stat": "p95",
        "region": "${AWS::Region}",
        "title": "Duration"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/Lambda", "Errors", "FunctionName", "${RealTimeEventsLambda}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Errors"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/Lambda", "DeadLetterErrors", "FunctionName", "${RealTimeEventsLambda}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Dead Letter Errors"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/Lambda", "ConcurrentExecutions", "FunctionName", "${RealTimeEventsLambda}"]
        ],
        "period": 60,
        "stat": "Maximum",
        "region": "${AWS::Region}",
        "title": "Concurrent Executions"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/Lambda", "UnreservedConcurrentExecutions", "FunctionName", "${RealTimeEventsLambda}"]
        ],
        "period": 60,
        "stat": "Average",
        "region": "${AWS::Region}",
        "title": "Unreserved Concurrent Executions"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/Lambda", "Throttles", "FunctionName", "${RealTimeEventsLambda}"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Throttles"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/Lambda", "IteratorAge", "FunctionName", "${RealTimeEventsLambda}"]
        ],
        "period": 60,
        "stat": "Maximum",
        "region": "${AWS::Region}",
        "title": "Iterator Age"
      }
    },
    {
      "type": "text",
      "width": 24,
      "height": 1,
      "properties": { "markdown": "# Data Lake" }
    },
    {
      "type": "metric",
      "width": 12,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/S3", "BucketSizeBytes", "StorageType", "AllStorageTypes"]
        ],
        "period": 86400,
        "stat": "Maximum",
        "region": "${AWS::Region}",
        "title": "Bucket Size (bytes)"
      }
    },
    {
      "type": "metric",
      "width": 12,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/S3", "NumberOfObject", "StorageType", "AllStorageTypes"]
        ],
        "period": 86400,
        "stat": "Maximum",
        "region": "${AWS::Region}",
        "title": "Bucket Size (objects)"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/S3", "AllRequests", "BucketName", "${Bucket}", "FilterId", "raw-events"],
          ["AWS/S3", "AllRequests", "BucketName", "${Bucket}", "FilterId", "events"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "All Requests"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/S3", "GetRequests", "BucketName", "${Bucket}", "FilterId", "raw-events"],
          ["AWS/S3", "GetRequests", "BucketName", "${Bucket}", "FilterId", "events"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Get Requests"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/S3", "PutRequests", "BucketName", "${Bucket}", "FilterId", "raw-events"],
          ["AWS/S3", "PutRequests", "BucketName", "${Bucket}", "FilterId", "events"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Put Requests"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/S3", "SelectRequests", "BucketName", "${Bucket}", "FilterId", "raw-events"],
          ["AWS/S3", "SelectRequests", "BucketName", "${Bucket}", "FilterId", "events"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Select Requests"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/S3", "BytesUploaded", "BucketName", "${Bucket}", "FilterId", "raw-events"],
          ["AWS/S3", "BytesUploaded", "BucketName", "${Bucket}", "FilterId", "events"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Bytes Uploaded"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/S3", "BytesDownloaded", "BucketName", "${Bucket}", "FilterId", "raw-events"],
          ["AWS/S3", "BytesDownloaded", "BucketName", "${Bucket}", "FilterId", "events"]
        ],
        "period": 60,
        "stat": "Sum",
        "region": "${AWS::Region}",
        "title": "Get Requests"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/S3", "FirstByteLatency", "BucketName", "${Bucket}", "FilterId", "raw-events"],
          ["AWS/S3", "FirstByteLatency", "BucketName", "${Bucket}", "FilterId", "events"]
        ],
        "period": 60,
        "stat": "p95",
        "region": "${AWS::Region}",
        "title": "Put Requests"
      }
    },
    {
      "type": "metric",
      "width": 6,
      "height": 4,
      "properties": {
        "metrics": [
          ["AWS/S3", "TotalRequestLatency", "BucketName", "${Bucket}", "FilterId", "raw-events"],
          ["AWS/S3", "TotalRequestLatency", "BucketName", "${Bucket}", "FilterId", "events"]
        ],
        "period": 60,
        "stat": "p95",
        "region": "${AWS::Region}",
        "title": "Select Requests"
      }
    },
    {
      "type": "text",
      "width": 24,
      "height": 1,
      "properties": { "markdown": "# Athena" }
    },
    {
      "type": "text",
      "width": 24,
      "height": 1,
      "properties": { "markdown": "# Glue ETL Jobs" }
    }
  ]
}
